<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="15f9df13-3aa6-45a3-84ff-fb798a505009" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/component-design/src/components/ui/Banner.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../design-system/src/components/ui/toggle/Toggle.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../design-system/src/components/ui/toggle/ToggleContext.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/components/Hello.test.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/components/Hello.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/hooks/usePostsQuery.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/jest.config.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/jest.setup.js" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/mocks/handlers.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-next/pages/setup.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/createQueryProviderFail.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/createQueryProviderSuccess.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/mocks/browsers.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/mocks/handlers.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/mocks/server.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/mocks/setup.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/api.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hello.test.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hooks/use-users/hello.test.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hooks/use-users/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hooks/use-users/use-users.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hooks/use-users/use-users.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/hooks/use-users/use-users.types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/services/userUsers.spec.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/create-query-provider-wrapper.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/data/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/data/users.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/index.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/msw/handlers.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../msw-node/src/utils/tests/setup.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/.env" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/.env" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/.eslintrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/.eslintrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/.prettierrc.json" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/.prettierrc.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/app/(auth)/layout.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/app/(auth)/layout.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/app/(auth)/signin/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/app/(auth)/signin/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/app/(dashboard)/home/page.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/app/(dashboard)/home/page.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/components/GlassPane.tsx" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/components/GlassPane.tsx" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/lib/db.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/lib/db.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/next.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/next.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/pages/_app.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/pages/_document.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/pages/index.tsx" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/prisma/seed.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/prisma/seed.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/styles/Home.module.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/styles/global.css" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/styles/global.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/styles/globals.css" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/tsconfig-seed.json" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/tsconfig-seed.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../next-fullstack/yarn.lock" beforeDir="false" afterPath="$PROJECT_DIR$/../next-fullstack/yarn.lock" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../react-basic/vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/../react-basic/vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../supabase-react/.env" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../supabase-react/.env.production" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../supabase-react/.prettierrc.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../supabase-react/e2e/utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/../supabase-react/supabase/clear-db-data.sql" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ProjectId" id="2KxF9aHKOzIo6TAZyZaorbq51Cb" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="15f9df13-3aa6-45a3-84ff-fb798a505009" name="Changes" comment="" />
      <created>1674908176934</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1674908176934</updated>
      <workItem from="1674908178143" duration="598000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
</project>